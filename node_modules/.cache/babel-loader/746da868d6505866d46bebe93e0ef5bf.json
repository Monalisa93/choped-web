{"ast":null,"code":"import _objectSpread from \"/Users/monalisadebnth/Downloads/choped-sm-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/monalisadebnth/Downloads/choped-sm-react/src/components/Dashboard/Groups/Groups.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../../axiosInstance\";\nimport Table from \"../../UI/Table/Table\";\nimport { connect } from \"react-redux\";\n\nclass Groups extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      groups: []\n    };\n  }\n\n  componentWillMount() {\n    axios.get(\"/groups/\".concat(this.props.userId)).then(response => {\n      const groups = response.data.map(group => {\n        return _objectSpread({}, group, {\n          members: group.members.length,\n          startDate: \"\".concat(new Date(group.startDate).getFullYear(), \"-\").concat(new Date(group.startDate).getMonth(), \"-\").concat(new Date(group.startDate).getDate()),\n          key: group.firebaseId\n        });\n      });\n      this.setState({\n        groups\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    }, {\n      title: \"Created On\",\n      dataIndex: \"startDate\",\n      key: \"startDate\"\n    }, {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\"\n    }, {\n      title: \"Total Members\",\n      dataIndex: \"members\",\n      key: \"members\"\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.groups,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps)(Groups);","map":{"version":3,"sources":["/Users/monalisadebnth/Downloads/choped-sm-react/src/components/Dashboard/Groups/Groups.js"],"names":["React","Component","axios","Table","connect","Groups","state","groups","componentWillMount","get","props","userId","then","response","data","map","group","members","length","startDate","Date","getFullYear","getMonth","getDate","key","firebaseId","setState","catch","error","console","log","render","columns","title","dataIndex","mapStateToProps","auth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BK,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE;AADF,KADqB;AAAA;;AAK7BC,EAAAA,kBAAkB,GAAG;AACnBN,IAAAA,KAAK,CACFO,GADH,mBACkB,KAAKC,KAAL,CAAWC,MAD7B,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMN,MAAM,GAAGM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,KAAK,IAAI;AACxC,iCACKA,KADL;AAEEC,UAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcC,MAFzB;AAGEC,UAAAA,SAAS,YAAK,IAAIC,IAAJ,CAASJ,KAAK,CAACG,SAAf,EAA0BE,WAA1B,EAAL,cAAgD,IAAID,IAAJ,CACvDJ,KAAK,CAACG,SADiD,EAEvDG,QAFuD,EAAhD,cAEO,IAAIF,IAAJ,CAASJ,KAAK,CAACG,SAAf,EAA0BI,OAA1B,EAFP,CAHX;AAMEC,UAAAA,GAAG,EAAER,KAAK,CAACS;AANb;AAQD,OATc,CAAf;AAUA,WAAKC,QAAL,CAAc;AAAEnB,QAAAA;AAAF,OAAd;AACD,KAdH,EAeGoB,KAfH,CAeSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjBH;AAkBD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KADc,EAMd;AACES,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,SAAS,EAAE,WAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KANc,EAWd;AACES,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,SAAS,EAAE,aAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KAXc,EAgBd;AACES,MAAAA,KAAK,EAAE,eADT;AAEEC,MAAAA,SAAS,EAAE,SAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KAhBc,CAAhB;AAsBA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEQ,OAAhB;AAAyB,MAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtD4B;;AAyD/B,MAAM4B,eAAe,GAAG7B,KAAK,IAAI;AAC/B,SAAO;AACLK,IAAAA,MAAM,EAAEL,KAAK,CAAC8B,IAAN,CAAWzB;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAAC+B,eAAD,CAAP,CAAyB9B,MAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"../../../axiosInstance\";\r\nimport Table from \"../../UI/Table/Table\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Groups extends Component {\r\n  state = {\r\n    groups: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    axios\r\n      .get(`/groups/${this.props.userId}`)\r\n      .then(response => {\r\n        const groups = response.data.map(group => {\r\n          return {\r\n            ...group,\r\n            members: group.members.length,\r\n            startDate: `${new Date(group.startDate).getFullYear()}-${new Date(\r\n              group.startDate\r\n            ).getMonth()}-${new Date(group.startDate).getDate()}`,\r\n            key: group.firebaseId\r\n          };\r\n        });\r\n        this.setState({ groups });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\"\r\n      },\r\n      {\r\n        title: \"Created On\",\r\n        dataIndex: \"startDate\",\r\n        key: \"startDate\"\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\"\r\n      },\r\n      {\r\n        title: \"Total Members\",\r\n        dataIndex: \"members\",\r\n        key: \"members\"\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Table columns={columns} dataSource={this.state.groups} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Groups);\r\n"]},"metadata":{},"sourceType":"module"}