{"ast":null,"code":"import _objectSpread from \"/Users/monalisadebnth/Downloads/choped-sm-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/monalisadebnth/Downloads/choped-sm-react/src/components/Dashboard/Conversations/Conversations.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../../axiosInstance\";\nimport Table from \"../../UI/Table/Table\";\nimport { connect } from \"react-redux\";\n\nclass Conversations extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      conversations: []\n    };\n  }\n\n  componentWillMount() {\n    axios.get(\"/conversations/\".concat(this.props.userId)).then(response => {\n      const conversations = response.data.map(conv => {\n        return _objectSpread({}, conv, {\n          startDate: \"\".concat(new Date(conv.startDate).getFullYear(), \"-\").concat(new Date(conv.startDate).getMonth(), \"-\").concat(new Date(conv.startDate).getDate()),\n          key: conv.firebaseId\n        });\n      });\n      this.setState({\n        conversations\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: \"Chat ID\",\n      dataIndex: \"chatId\",\n      key: \"chatId\"\n    }, {\n      title: \"Created On\",\n      dataIndex: \"startDate\",\n      key: \"startDate\"\n    }, {\n      title: \"Language\",\n      dataIndex: \"language\",\n      key: \"language\"\n    }, {\n      title: \"Intent\",\n      dataIndex: \"intent\",\n      key: \"intent\"\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.conversations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps)(Conversations);","map":{"version":3,"sources":["/Users/monalisadebnth/Downloads/choped-sm-react/src/components/Dashboard/Conversations/Conversations.js"],"names":["React","Component","axios","Table","connect","Conversations","state","conversations","componentWillMount","get","props","userId","then","response","data","map","conv","startDate","Date","getFullYear","getMonth","getDate","key","firebaseId","setState","catch","error","console","log","render","columns","title","dataIndex","mapStateToProps","auth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACNC,MAAAA,aAAa,EAAE;AADT,KAD4B;AAAA;;AAKpCC,EAAAA,kBAAkB,GAAI;AACpBN,IAAAA,KAAK,CAACO,GAAN,0BAA4B,KAAKC,KAAL,CAAWC,MAAvC,GACCC,IADD,CACMC,QAAQ,IAAI;AAChB,YAAMN,aAAa,GAAGM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,IAAI,IAAI;AAC9C,iCACKA,IADL;AAEEC,UAAAA,SAAS,YAAK,IAAIC,IAAJ,CAASF,IAAI,CAACC,SAAd,EAAyBE,WAAzB,EAAL,cAA+C,IAAID,IAAJ,CAASF,IAAI,CAACC,SAAd,EAAyBG,QAAzB,EAA/C,cAAsF,IAAIF,IAAJ,CAASF,IAAI,CAACC,SAAd,EAAyBI,OAAzB,EAAtF,CAFX;AAGEC,UAAAA,GAAG,EAAEN,IAAI,CAACO;AAHZ;AAKD,OANqB,CAAtB;AAOA,WAAKC,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACD,KAVD,EAWGkB,KAXH,CAWSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAbD;AAeD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KADc,EAMd;AACES,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,SAAS,EAAE,WAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KANc,EAWd;AACES,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KAXc,EAgBd;AACES,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEV,MAAAA,GAAG,EAAE;AAHP,KAhBc,CAAhB;AAsBA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEQ,OAAhB;AAAyB,MAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWC,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnDmC;;AAsDtC,MAAM0B,eAAe,GAAG3B,KAAK,IAAI;AAC/B,SAAO;AACLK,IAAAA,MAAM,EAAEL,KAAK,CAAC4B,IAAN,CAAWvB;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"../../../axiosInstance\";\r\nimport Table from \"../../UI/Table/Table\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Conversations extends Component {\r\n  state = {\r\n    conversations: []\r\n  };\r\n\r\n  componentWillMount () {\r\n    axios.get(`/conversations/${this.props.userId}`)\r\n    .then(response => {\r\n      const conversations = response.data.map(conv => {\r\n        return {\r\n          ...conv,\r\n          startDate: `${new Date(conv.startDate).getFullYear()}-${new Date(conv.startDate).getMonth()}-${new Date(conv.startDate).getDate()}`,\r\n          key: conv.firebaseId\r\n        }\r\n      })\r\n      this.setState({ conversations })     \r\n    })\r\n      .catch(error => {\r\n        console.log(error);\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Chat ID\",\r\n        dataIndex: \"chatId\",\r\n        key: \"chatId\"\r\n      },\r\n      {\r\n        title: \"Created On\",\r\n        dataIndex: \"startDate\",\r\n        key: \"startDate\"\r\n      },\r\n      {\r\n        title: \"Language\",\r\n        dataIndex: \"language\",\r\n        key: \"language\"\r\n      },\r\n      {\r\n        title: \"Intent\",\r\n        dataIndex: \"intent\",\r\n        key: \"intent\"\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Table columns={columns} dataSource={this.state.conversations} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Conversations);\r\n"]},"metadata":{},"sourceType":"module"}